#!/bin/bash
# ==============================================================================
#  ü¶Ü duck_events.sh ‚Äì (Refactored v3.0 - The Full Canon Nerd Chart Edition)
#  Quirky, optimized terminal greetings & reminders.
# ==============================================================================

# --- ASCII Duck Greeter ---
echo "
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚°∂‚†ø‚†ø‚†∑‚£∂‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚°ø‚†Å‚†Ä‚†Ä‚¢Ä‚£Ä‚°Ä‚†ô‚£∑‚ÄÄ‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†ò‚†ø‚†É‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø
‚†Ä‚£†‚°ø‚†õ‚¢∑‚£¶‚°Ä‚†Ä‚†Ä‚†à‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚†ü
‚¢∞‚°ø‚†Å‚†Ä‚†Ä‚†ô‚¢ø‚£¶‚£§‚£§‚£º‚£ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢¥‚°ü‚†õ‚†ã‚†Å‚†Ä
‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚°Ä‚†Ä‚†Ä‚†Ä
‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚°á‚†Ä‚†Ä‚†Ä
‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚°á‚†Ä‚†Ä‚†Ä
‚†∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°ø‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†π‚£∑‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£∞‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†â‚ô†‚†õ‚†ø‚†∂‚£∂‚£∂‚£∂‚£∂‚£∂‚†∂‚†ø‚†ü‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
"

# --- Date and Time Setup (Optimized) ---
# Get all date/time components in one efficient call
read -r today time weekday_num weekday month_day day month hour minute < <(date +"%Y-%m-%d %H:%M:%S %u %A %m-%d %d %m %H %M")
# Get day of the year (sed is used for portability across systems)
day_of_year=$(date +%j | sed 's/^0*//')

echo "The duck welcomes you $USER $today at $time..."
echo ""

# ==============================================================================
#  ‚ú® GREETING LOGIC
# ==============================================================================

# --- STEP 1: Zodiac Sign Calculator ---
# Traditional Western Zodiac
if   [[ "$month_day" > "03-20" && "$month_day" < "04-20" ]]; then
    echo "Today's Zodiac sign is ‚ôà Aries."
elif [[ "$month_day" > "04-19" && "$month_day" < "05-21" ]]; then
    echo "Today's Zodiac sign is ‚ôâ Taurus."
elif [[ "$month_day" > "05-20" && "$month_day" < "06-21" ]]; then
    echo "Today's Zodiac sign is ‚ôä Gemini."
elif [[ "$month_day" > "06-20" && "$month_day" < "07-23" ]]; then
    echo "Today's Zodiac sign is ‚ôã Cancer."
elif [[ "$month_day" > "07-22" && "$month_day" < "08-23" ]]; then
    echo "Today's Zodiac sign is ‚ôå Leo."
elif [[ "$month_day" > "08-22" && "$month_day" < "09-23" ]]; then
    echo "Today's Zodiac sign is ‚ôç Virgo."
elif [[ "$month_day" > "09-22" && "$month_day" < "10-23" ]]; then
    echo "Today's Zodiac sign is ‚ôé Libra."
elif [[ "$month_day" > "10-22" && "$month_day" < "11-22" ]]; then
    echo "Today's Zodiac sign is ‚ôè Scorpio."
elif [[ "$month_day" > "11-21" && "$month_day" < "12-22" ]]; then
    echo "Today's Zodiac sign is ‚ôê Sagittarius."
elif [[ "$month_day" > "12-21" || "$month_day" < "01-20" ]]; then
    echo "Today's Zodiac sign is ‚ôë Capricorn."
elif [[ "$month_day" > "01-19" && "$month_day" < "02-19" ]]; then
    echo "Today's Zodiac sign is ‚ôí Aquarius."
else
    echo "Today's Zodiac sign is ‚ôì Pisces."
fi


# --- STEP 2: Personal Dates & Reminders (Optional) ---
case "$month_day" in
  "02-13") echo "üíù Reminder: Valentine's Day is tomorrow!" ;;
  "06-20") echo "üéÇ Happy Birthday, Marcus! Hope you have a great day." ;;
  "10-12") echo "üéÅ Reminder: One month until Helen‚Äôs birthday ‚Äì time to find a gift!" ;;
  "11-01") echo "‚ù§Ô∏è Happy Anniversary Marcus & Helen!" ;;
  "11-12") echo "üéÇ Happy Birthday, Helen! ‚ù§Ô∏è" ;;
esac

# --- STEP 3: Worldly, Geeky & Special Dates ---
# General Holidays & Events
case "$month_day" in
  "01-01") echo "üéâ Happy New Year's Day! And National Pizza Day in Sweden. Perfect hangover food." ;;
  "02-02") echo "üêøÔ∏è Happy Groundhog Day! Will the winter end soon?" ;;
  "02-13") echo "‚öôÔ∏è C# 1.0 was released (2002)." ;;
  "02-14") echo "‚ù§Ô∏è Happy Valentine's Day!" ;;
  "02-18") echo "ü§ñ Perseverance Rover landing anniversary (2021) on Mars." ;;
  "02-22") echo "üê± Nyan Nyan Nyan! Happy Cat Day in Japan!" ;;
  "03-14") echo "ü•ß Happy Pi Day! (3.14) & ü§ç Happy White Day!" ;;
  "03-21") echo "üß¶ mismatched socks today for World Down Syndrome Day!" ;;
  "03-31") echo "üíæ World Backup Day. Have you backed up your files recently? DO IT NOW." ;;
  "04-01") echo "üÉè April Fools' Day. Trust no one. Not even this terminal." ;;
  "04-22") echo "üåé Happy Earth Day! Take a moment to appreciate our planet." ;;
  "04-26") echo "üëΩ Alien Day (for LV-426)!"; echo "‚ò¢Ô∏è Chernobyl disaster anniversary (1986)." ;;
  "06-06") echo "üá∏üá™ Happy National Day of Sweden!" ;;
  "07-20") echo "üåï Apollo 11 Moon Landing anniversary (1969)." ;;
  "08-08") echo "üêà International Cat Day ‚Äì meeeeooow!" ;;
  "09-10") echo "üõ∏ The X-Files premiere anniversary. The truth is out there." ;;
  "09-19") echo "‚ò†Ô∏è Talk Like a Pirate Day ‚Äî Arrr matey, code ye must!" ;;
  "09-21") echo "üïäÔ∏è International Day of Peace." ;;
  "09-25") echo "üìö National Comic Book Day!" ;;
  "10-05") echo "üßë‚Äçüè´ World Teachers' Day! Thank a teacher." ;;
  "10-11") echo "üè≥Ô∏è‚Äçüåà National Coming Out Day. Be proud of who you are." ;;
  "10-12") echo "üìö Hitchhiker's Guide to the Galaxy publication anniversary." ;;
  "10-21") echo "‚ö° Back to the Future Day! Where we're going, we don't need roads." ;;
  "12-01") echo "üé∂ It's the first of the month... I'm telling you, I'm ready for 'Back to December'." ;;
  "12-09") echo "üìü Happy International ASCII Day!" ;;
  "12-10") echo "üé¨ The Fellowship of the Ring premiered in London (2001)." ;;
  "12-13") echo "üïØÔ∏è Glad Lucia! Time for lussekatter and songs." ;;
  "12-24") echo "üéÑ Christmas Eve ‚Äì close the terminal and open presents!" ;;
  "12-25") echo "üéÑ Merry Christmas!" ;;
  "12-31") echo "ü•Ç New Year's Eve! Get ready for the countdown." ;;
esac

# Swedish Nerd Pride
case "$month_day" in
  "12-01") echo "üéπ Commodore 64 reached Sweden (1983). 8-bit glory begins!" ;;
  "05-17") echo "üéÆ Minecraft Alpha launched (2009) ‚Äî from Sweden to the world." ;;
  "10-07") echo "üé∂ Spotify launched in Stockholm (2008)." ;;
  "07-01") echo "üì± First GSM call (1991, Stockholm). Hello, mobile era!" ;;
esac

# Gaming Legends
case "$month_day" in
  "01-26") echo "üêâ Dungeons & Dragons released (1974). Roll initiative!" ;;
  "02-21") echo "üî∫ The Legend of Zelda released in Japan (1986). It's dangerous to go alone! Take this." ;;
  "03-10") echo "üçÑ MAR10 Day ‚Äî It's-a-me, Mario!" ;;
  "03-22") echo "üßü Resident Evil release (1996). Enter survival horror." ;;
  "05-22") echo "üü° Pac-Man Day (1980). Waka-waka forever." ;;
  "06-06") echo "üïπÔ∏è Tetris released (1984). Rotate responsibly!" ;;
  "06-19") echo "üí• Counter-Strike beta (1999). Rush B!" ;;
  "06-22") echo "üß± Quake release (1996). Gib responsibly." ;;
  "07-09") echo "üêí Donkey Kong release (1981). It‚Äôs on like Donkey Kong!" ;;
  "11-07") echo "ü™ê Mass Effect N7 Day." ;;
  "11-11") echo "üåå Skyrim release (2011). FUS RO DAH!" ;;
  "11-19") echo "ü™ñ Half-Life release (1998). Gordon Freeman reporting." ;;
  "12-10") echo "üî´ DOOM release (1993). Rip & tear!" ;;
esac

# Star Wars Universe
case "$month_day" in
    "05-04") echo "üåå Star Wars Day ‚Äì May the 4th be with you!" ;;
    "05-05") echo "‚ö´ Revenge of the Fifth! The Sith are celebrating." ;;
    "05-25") echo "‚öîÔ∏è A New Hope premiered (1977)." ;;
    "11-12") echo "üé¨ The Mandalorian premiered (2019)." ;;
    "09-21") echo "üé¨ Andor premiered (2022)." ;;
    "10-03") echo "üé¨ The Clone Wars series premiered (2008)." ;;
esac

# Star Trek Universe
case "$month_day" in
  "09-08") echo "üññ Star Trek: The Original Series premiered (1966)." ;;
  "09-20") echo "üññ Star Trek: The Next Generation premiered (1987)." ;;
  "01-03") echo "üññ Star Trek: Deep Space Nine premiered (1993)." ;;
  "01-16") echo "üññ Star Trek: Voyager premiered (1995)." ;;
  "09-26") echo "üññ Star Trek: Enterprise premiered (2001)." ;;
  "09-24") echo "üññ Star Trek: Discovery premiered (2017)." ;;
  "01-23") echo "üññ Star Trek: Picard premiered (2020)." ;;
  "08-06") echo "üññ Star Trek: Lower Decks premiered (2020)." ;;
  "05-05") echo "üññ Star Trek: Strange New Worlds premiered (2022)." ;;
esac

# Doctor Who Premieres (Full Canon)
case "$month_day" in
  "11-23") echo "üï∞Ô∏è 1st Doctor (Hartnell) debut (1963) & War Doctor (Hurt) reveal (2013).";;
  "11-05") echo "üï∞Ô∏è 2nd Doctor (Troughton) debut (1966)." ;;
  "01-03") echo "üï∞Ô∏è 3rd Doctor (Pertwee) debut (1970)." ;;
  "12-28") echo "üï∞Ô∏è 4th Doctor (Tom Baker) debut (1974)." ;;
  "01-04") echo "üï∞Ô∏è 5th Doctor (Davison) debut (1982)." ;;
  "03-22") echo "üï∞Ô∏è 6th Doctor (Colin Baker) debut (1984)." ;;
  "09-07") echo "üï∞Ô∏è 7th Doctor (McCoy) debut (1987)." ;;
  "05-27") echo "üï∞Ô∏è 8th Doctor (McGann) debut (1996)." ;;
  "03-26") echo "üï∞Ô∏è 9th Doctor (Eccleston) debut & series reboot (2005). Fantastic!" ;;
  "12-25") echo "üï∞Ô∏è 10th Doctor (Tennant) debut (2005). Allons-y!" ;;
  "04-03") echo "üï∞Ô∏è 11th Doctor (Smith) debut (2010). Geronimo!" ;;
  "08-23") echo "üï∞Ô∏è 12th Doctor (Capaldi) debut (2014)." ;;
  "10-07") echo "üï∞Ô∏è 13th Doctor (Whittaker) debut (2018)." ;;
  "01-26") echo "üï∞Ô∏è Fugitive Doctor (Martin) debut (2020)." ;;
  "11-25") echo "üï∞Ô∏è 14th Doctor (Tennant again!) debut (2023)." ;;
  "04-12") echo "üï∞Ô∏è 15th Doctor (Gatwa) debut (2025)! The new era has begun." ;;
esac

# Alien & Predator Films
case "$month_day" in
  "05-25") echo "üëΩ Alien premiered (1979). In space no one can hear you scream." ;;
  "07-18") echo "üëΩ Aliens premiered (1986). Get away from her, you bitch!" ;;
  "06-12") echo "üëπ Predator premiered (1987). If it bleeds, we can kill it." ;;
  "08-05") echo "üëπ Prey premiered (2022)." ;;
esac

# Special day calculations
if [ "$day" = "13" ] && [ "$weekday" = "Friday" ]; then
  echo "‚ò†Ô∏è Friday the 13th ‚Äì beware of cursed bugs!"
fi
if [ "$day_of_year" -eq 256 ]; then
    echo "üíª Happy Programmers' Day! (Day 256)"
fi
# Dia de los muertos spans multiple days
if [[ "$month_day" > "10-30" && "$month_day" < "11-03" ]]; then
    echo "üíÄüïØÔ∏è D√≠a de los Muertos. Remembering loved ones."
elif [ "$month_day" = "10-31" ]; then
    echo "üéÉ Happy Halloween ‚Äì beware of ghost bugs in the code."
fi

# Blue Monday and Swiftie February
if [ "$month" = "01" ] && [ "$weekday" = "Monday" ] && [ "$day" -ge 15 ] && [ "$day" -le 21 ]; then
    echo "üòû It's Blue Monday, supposedly the saddest day of the year. Push through!"
fi
if [ "$month" = "02" ] && [ "$weekday" = "Monday" ]; then
    echo "üé∂ All my mornings are Mondays stuck in an endless February..."
fi

# --- STEP 4: Hourly & Weekend Greetings ---
if [ "$hour" -eq 13 ] && [ "$minute" -eq 37 ]; then
    echo "üëæ 13:37 - L33T H4X0R T1M3!"
elif [ "$day" -eq 13 ] && [ "$hour" -eq 13 ] && [ "$minute" -eq 13 ]; then
    echo "üé∂ It's 13:13 on the 13th! Ultimate Taylor Swift hour!"
elif (( weekday_num < 6 )); then # It's a weekday (Mon-Fri)
    case "$hour" in
        0) echo "üëª Spooky hour... the code is alive..." ;;
        8|9) echo "‚òÄÔ∏è Good morning! Time to conquer the code." ;;
        12|13) echo "üçΩÔ∏è Lunch time! Step away from the screen." ;;
        16|17) echo "üèÅ Almost there ‚Äî time to wrap it up." ;;
        21) echo " unwind." ;;
        22|23)
            if [ "$weekday" = "Friday" ]; then
                echo "üéâ It's Friday night! Time to relax or party!"
            else
                echo " Dude, you need to sleep. Workday tomorrow."
            fi
            ;;
    esac
else # It's a weekend (Sat-Sun)
    if [ "$weekday" = "Saturday" ]; then
      echo "üêæ Happy Caturday! The purrfect day for coding... or napping."
    fi
    case "$hour" in
        0) echo "üëª Spooky hour... the code is alive..." ;;
        [0-9]|1) echo "‚òï Weekend morning coding session. Nice and quiet." ;; # 0-9
        1[0-7]) echo "üå≥ It's the middle of the day. Get out and get some fresh air!" ;; # 10-17
        18|19) echo "‚ù§Ô∏è Spend time with your family, dude!" ;;
        20|21) echo "üéÆ Gaming and coding time! Enjoy." ;;
        22|23)
            if [ "$weekday" = "Sunday" ]; then
                echo "üåô Go to sleep, dude. Workday tomorrow."
            else # It's Saturday
                echo "üéâ Saturday night! Party on!"
            fi
            ;;
    esac
fi

# --- STEP 5: Seasonal Vibes + Pagan holidays (Northern Hemisphere) ---
# First, handle month-specific vibes that might overlap seasons
if [ "$month" = "06" ]; then
    echo "üè≥Ô∏è‚Äçüåà Happy Pride Month! Code with love and pride."
fi
if [ "$month" = "10" ]; then
    echo "üéÉ Happy Spooktober! Time for some spooky code."
fi

# Pagan cross-quarter days (mid-season markers) first, so they don't double-print
case "$month_day" in
  "02-01") echo "‚ùÑÔ∏è Imbolc ‚Äî mid-winter. Light returns." ;;
  "05-01") echo "üå± Beltane ‚Äî mid-spring. Fire, growth and joy." ;;
  "08-01") echo "‚òÄÔ∏è Lammas (Lughnasadh) ‚Äî mid-summer. First harvest." ;;
  "11-01") echo "üçÇ Samhain ‚Äî mid-autumn. The veil thins." ;;
esac

# Season starts (equinoxes/solstices) on the exact day
if   [[ "$month_day" == "03-20" ]]; then
  echo "üå± Spring Equinox (Ostara) ‚Äî spring begins!"
elif [[ "$month_day" == "06-21" ]]; then
  echo "‚òÄÔ∏è Summer Solstice (Litha) ‚Äî summer begins!"
elif [[ "$month_day" == "09-22" ]]; then
  echo "üçÇ Autumn Equinox (Mabon) ‚Äî autumn begins!"
elif [[ "$month_day" == "12-21" ]]; then
  echo "‚ùÑÔ∏è Winter Solstice (Yule) ‚Äî winter begins!"

# SPRING: Mar 21 ‚Äì Jun 20
elif [[ "$month_day" > "03-20" && "$month_day" < "06-21" ]]; then
  if   [[ "$month_day" < "04-20" ]]; then
    echo "üå± Early Spring ‚Äî fresh starts everywhere."
  elif [[ "$month_day" < "05-20" ]]; then
    echo "üå± Spring in full swing."
  elif [[ "$month_day" < "06-14" ]]; then
    echo "üå± Late Spring ‚Äî summer is coming."
  else
    echo "üå± Final days of Spring ‚Äî almost solstice."
  fi

# SUMMER: Jun 22 ‚Äì Sep 21
elif [[ "$month_day" > "06-21" && "$month_day" < "09-22" ]]; then
  if   [[ "$month_day" < "07-21" ]]; then
    echo "‚òÄÔ∏è Early Summer ‚Äî heat is building."
  elif [[ "$month_day" < "08-21" ]]; then
    echo "‚òÄÔ∏è Summer in full swing ‚Äî peak sunshine."
  elif [[ "$month_day" < "09-15" ]]; then
    echo "‚òÄÔ∏è Late Summer ‚Äî golden hours."
  else
    echo "‚òÄÔ∏è Final days of Summer ‚Äî autumn is near."
  fi

# AUTUMN: Sep 23 ‚Äì Dec 20
elif [[ "$month_day" > "09-22" && "$month_day" < "12-21" ]]; then
  if   [[ "$month_day" < "10-22" ]]; then
    echo "üçÇ Early Autumn ‚Äî crisp air and turning leaves."
  elif [[ "$month_day" < "11-22" ]]; then
    echo "üçÇ Autumn in full swing ‚Äî cozy nights and coffee."
  elif [[ "$month_day" < "12-14" ]]; then
    echo "üçÇ Late Autumn ‚Äî winter is coming."
  else
    echo "üçÇ Final days of Autumn ‚Äî almost solstice."
  fi

# WINTER: Dec 22 ‚Äì Mar 19
else
  if   [[ "$month_day" > "12-21" || "$month_day" < "01-21" ]]; then
    echo "‚ùÑÔ∏è Early Winter ‚Äî the cold has just begun."
  elif [[ "$month_day" < "02-21" ]]; then
    echo "‚ùÑÔ∏è Winter in full swing ‚Äî frosty and focused."
  elif [[ "$month_day" < "03-13" ]]; then
    echo "‚ùÑÔ∏è Late Winter ‚Äî spring is around the corner."
  else
    echo "‚ùÑÔ∏è Final days of Winter ‚Äî almost equinox."
  fi
fi


# --- STEP 6: Final Sign-off ---
echo "‚ú® Have a quack day, and don't quack it up!"
echo ""

